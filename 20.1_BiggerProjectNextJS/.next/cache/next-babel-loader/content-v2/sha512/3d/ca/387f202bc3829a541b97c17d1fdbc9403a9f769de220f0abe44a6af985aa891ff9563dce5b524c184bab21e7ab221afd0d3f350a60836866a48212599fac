{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\chach\\\\Desktop\\\\UdemyClass\\\\udemy-react-the-complete-guide\\\\20.1_BiggerProjectNextJS\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n/* Running from server side & regenerated this when have request from server */\n// no need revalidate!\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from APIs\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n/* --- SSG --- */\n\n/* Static site generation & Not regenerated new when have request from server */\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/chach/Desktop/UdemyClass/udemy-react-the-complete-guide/20.1_BiggerProjectNextJS/pages/index.js"],"names":["Head","MeetupList","Fragment","HomePage","props","meetups"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;;KAvBSF,Q;;AAqDT,eAAeA,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { Fragment } from \"react\";\r\n\r\nfunction HomePage(props) {\r\n  return (\r\n    <Fragment>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n/* Running from server side & regenerated this when have request from server */\r\n// no need revalidate!\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from APIs\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// }\r\n\r\n/* --- SSG --- */\r\n/* Static site generation & Not regenerated new when have request from server */\r\nexport async function getStaticProps() {\r\n  // fetch data from APIs\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://chachchai:dhvd6gdiupo@node-complete-cluster.dq9dg.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  // .find() without arguments will findAll\r\n  // .toArray() set documents to be array\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    /* Incremental static generation with second unit for request and regenerated this page frequently */\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}